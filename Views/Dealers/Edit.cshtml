@model Proiect_ASP_NET_MVC.Models.Dealer

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Dealer</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ID" />
            <div class="form-group">
                <label asp-for="DealerName" class="control-label"></label>
                <input asp-for="DealerName" class="form-control" />
                <span asp-validation-for="DealerName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Adress" class="control-label"></label>
                <input asp-for="Adress" class="form-control" />
                <span asp-validation-for="Adress" class="text-danger"></span>
            </div>
            <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
           <table>
          <tr>
          @{
           int cnt = 0;
            List<Proiect_ASP_NET_MVC.Models.ProjectViewModels.SoldCarData> cars = ViewBag.Cars;
          foreach (var car in cars)
            {
          

            @:<tr><td>
            <input type="checkbox" name="selectedCars" value="@car.CarID"
            @(Html.Raw(car.IsSold ? "checked=\"checked\"" : "")) />
         
           var fullName = car.Brand.Name + " " + car.Model;

           @fullName 
 @:</td></tr>
 }
 @:</tr>
}
 </table>
 </div>
 </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
